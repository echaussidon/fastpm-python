#!/bin/bash

#SBATCH --image=edmondchau/fastpm-python:latest
#SBATCH --nodes=1600
#SBATCH --time=01:00:00
#SBATCH --constraint=knl
#SBATCH --qos=regular
#SBTACH --account=desi

#SBATCH --mail-type=ALL
#SBATCH --mail-user=edmond.chaussidon@cea.fr

#SBATCH --job-name=halos
#SBATCH --output="%x-%j.out"

# Timer initialisation:
SECONDS=0

# Problem with shifter at NERSC, it does not clear the PYTHONPATH... (exactly what we do not want to do...)
export PYTHONPATH=''

# Parameters (knl = 68 physical core per Nodes with 4 threads per physical core):
# OpenMP not use --> set it just in case --> use --cpu-bind=cores -c $OMP_NUM_THREADS
# For the moment fof works with 4 processes per nodes ...
export OMP_NUM_THREADS=8
nproc=6397 #(Nodes - 1) * 4 + 1

# Initialize SLURM_HOSTFILE and built it for --distribution=arbitrary option in srun
export SLURM_HOSTFILE=hostfile_$SLURM_JOB_ID.txt
end=1 # rank 0 isolated in node 0
for node in `scontrol show hostname $SLURM_NODELIST`; do
    for ((i=1; i<=$end; i++)); do echo $node >> $SLURM_HOSTFILE; done
    end=4 # ranks per nodes
done

echo
echo "Start post-processing at aout: $2"
echo
srun -n $nproc -c $OMP_NUM_THREADS --distribution=arbitrary --cpu-bind=cores shifter \
     python -m fastpm.post_processing --sim $1 --aout $2 \
                                      --compute_halos True --compute_power False --subsampling False \
                                      --nmin 8 --min_mass_halos 2.25e12 \
                                      --nmesh 2048 --k_min 1e-3 --k_max 1.5e0 --kbin 1e-3
# remove $SLURM_HOSTFILE
rm $SLURM_HOSTFILE

if (( $SECONDS > 3600 )); then
    let "hours=SECONDS/3600"
    let "minutes=(SECONDS%3600)/60"
    let "seconds=(SECONDS%3600)%60"
    echo "Completed in $hours hour(s), $minutes minute(s) and $seconds second(s)"
elif (( $SECONDS > 60 )); then
    let "minutes=(SECONDS%3600)/60"
    let "seconds=(SECONDS%3600)%60"
    echo "Completed in $minutes minute(s) and $seconds second(s)"
else
    echo "Completed in $SECONDS seconds"
fi
echo
